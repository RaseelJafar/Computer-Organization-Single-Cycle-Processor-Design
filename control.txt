RegDst(1)
0>Rx
1>R7

RegWrite(1)
0> no write on Reg
1> write on Reg

ExtOp(1)
0> zero ext. Imm5
1> sign ext. Imm5

BSel(2)
00> BusZ
01> Imm5
10> Imm3Imm2
11> Imm11

MemWrite(1)
0> nowrite
1> Write

MemRead(1)
0> noread
1> Read

Wdata(2)
00> ALU result
01> DataMem
10> PC+2
------------------------------------
RegDes_RegWrite_ExtOp_Bsel_MemWrite_MemRead_Wdata
 AND >op =0(Rx,Ry,Rz)
0_1_0_00_0_0_00 >>0_1000_0000b >>0x080 (*)
0_1_1_00_0_0_00 >>0_1100_0000b >>0x0c0

CAND >op=0(Rx,Ry,Rz)

0_1_0_00_0_0_00 >> 0_1000_0000b>> 0x080(*)
0_1_1_00_0_0_00 >> 0_1100_0000b>> 0x0c0

 OR op=0(Rx,Ry,Rz)

0_1_0_00_0_0_00 >>0_1000_0000b >>0x080(*)
0_1_1_00_0_0_00 >>0_1100_0000b >>0x0c0

 XOR >op =0(Rx,Ry,Rz)

0_1_0_00_0_0_00 >>0_1000_0000b >>0x080(*)
0_1_1_00_0_0_00 >>0_1100_0000b >>0x0c0

 ADD op=1(Rx,Ry,Rz)

0_1_0_00_0_0_00 >>0_1000_0000b >>0x080(*)
0_1_1_00_0_0_00 >>0_1100_0000b >>0x0c0

 NADD  >op =1(Rx,Ry,Rz)
0_1_0_00_0_0_00 >>0_1000_0000b >>0x080(*)
0_1_1_00_0_0_00 >>0_1100_0000b >>0x0c0

 SEQ >op =1(Rx,Ry,Rz)

0_1_0_00_0_0_00 >>0_1000_0000b >>0x080(*)
0_1_1_00_0_0_00 >>0_1100_0000b >>0x0c0

 SLT >op=1(Rx,Ry,Rz)

0_1_0_00_0_0_00 >>0_1000_0000b >>0x080(*)
0_1_1_00_0_0_00 >>0_1100_0000b >>0x0c0


ANDI >op=2 (Rx,Ry,Imm5) //  zero_extend(Imm5) 
0_1_0_01_0_0_00 >>0_1001_0000b>> 0x090
 
CANDI >op=3  (Rx,Ry,Imm5) // zero_extend(Imm5) 
0_1_0_01_0_0_00 >>0_1001_0000b>> 0x090

ORI >op=4 (Rx,Ry,Imm5)  //zero_extend(Imm5) 
0_1_0_01_0_0_00 >>0_1001_0000b>> 0x090

XORI >op=5 (Rx,Ry,Imm5)  //zero_extend(Imm5) 
0_1_0_01_0_0_00 >>0_1001_0000b>> 0x090 

ADDI >op=6 (Rx,Ry,Imm5)  //sign_extend(Imm5) 
0_1_1_01_0_0_00 >>0_1101_0000b>>0x0d0


NADDI >op=7 (Rx,Ry,Imm5)  //sign_extend(Imm5) 
0_1_1_01_0_0_00 >>0_1101_0000b>>0x0d0

-----------------
SEQI > op=8(Rx,Ry,sign_extend(Imm5))
0_1_1_01_0_0_00 >> 0_1101_0000B >> 0x0d0

SLTI > op=9(Rx,Ry,sign_extend(Imm5))
0_1_1_01_0_0_00 >> 0_1101_0000B >> 0x0d0

SLL > op=10(Rx,Ry,Imm5)
0_1_1_01_0_0_00 >> 0_1101_0000 >> 0x0d0
0_1_0_01_0_0_00 >> 0_1001_0000 >> 0x090(*)

SRL > op=11(Rx,Ry,Imm5)
0_1_1_01_0_0_00 >> 0_1101_0000 >> 0x0d0
0_1_0_01_0_0_00 >> 0_1001_0000 >> 0x090(*)

SRA > op=12(Rx,Ry,Imm5)
0_1_1_01_0_0_00 >> 0_1101_0000 >> 0x0d0
0_1_0_01_0_0_00 >> 0_1001_0000 >> 0x090(*)

ROR > op=13(Rx,Ry,Imm5)
0_1_1_01_0_0_00 >> 0_1101_0000 >> 0x0d0
0_1_0_01_0_0_00 >> 0_1001_0000 >> 0x090(*)

BEQ > op=14(Rx,Ry,sign_extend(Imm5))
0_1_1_01_0_0_10 >> 0_1101_0010 >> 0x0d2

BNE > op=15(Rx,Ry,sign_extend(Imm5))
0_1_1_01_0_0_10 >> 0_1101_0010 >> 0x0d2

BLT > op=16(Rx,Ry,sign_extend(Imm5))
0_1_1_01_0_0_10 >> 0_1101_0010 >> 0x0d2

BGE > op=17(Rx,Ry,sign_extend(Imm5))
0_1_1_01_0_0_10 >> 0_1101_0010 >> 0x0d2

LW > op=18(Rx,Ry,sign_extend(Imm5))
0_1_1_01_0_1_01 >> 0_1101_0101 >> 0x0d5

SW > op=19(Ry,Rz,sign_extend(Imm3,Imm2))
0_1_1_10_1_0_01 >> 0_1110_1001 >> 0x0e9(*)
1_1_1_10_1_0_01 >> 1_1110_1001 >> 0x1e9

J > op=20(sign_extend(Imm11))
0_0_1_11_0_0_10 >> 0_0111_0010 >> 0x072(*)
1_0_1_11_0_0_10 >> 1_0111_0010 >> 0x172

JAL > op=21(sign_extend(Imm11))
1_1_1_11_0_0_10 >> 1_1111_0010 >> 0x1f2

_______________________________________________________
Alu operation : XOR, AND, OR, CAND, ADD, SEQ, NADD, SLT, SRA, SRL, SLL, and ROR.

Opcode 5 bit ,f:2 bits


AND op =0 f=0 AluOp =0001
00000_00b-->000_0000 --> 0x00

CAND op=0 f=1 AluOp =0011
00000_01b-->000_0001--> 0x01

OR  op =0 f=2 AluOp =0010
00000_10b-->000_0010--> 0x02

 
XOR op =0 f=3 AluOp =0000
00000_11b--> 000_0011 -->0x03


ADD op =1 f=0 AluOp =0100
00001_00b-->000_0100 --> 0x04

NADD op =1 f=1 AluOp = 0110
00001_01b-->000_0101-->  0x05


SEQ op =1 f=2 ALUOp =0101
00001_10b-->000_0110-->  0x06


SLT op =1 f=3 ALuOp = 0111
00001_11b-->000_0111-->  0x07


ANDI op=2 f=x   ALUop = 0001
00010_00 --> 000_1000 --> 0x08
00010_01 --> 000_1001 --> 0x09
00010_10 --> 000_1010 --> 0x0a
00010_11 --> 000_1011 --> 0x0b

CANDI op=3 f=x   ALUop=0011
00011_00 --> 000_1100 --> 0x0c
00011_01 --> 000_1101 --> 0x0d
00011_10 --> 000_1110 --> 0x0e
00011_11 --> 000_1111 --> 0x0f

ORI op=4 f=x     ALUop=0010
00100_00 --> 001_0000 --> 0x10
00100_01 --> 001_0001 --> 0x11
00100_10 --> 001_0010 --> 0x12
00100_11 --> 001_0011 --> 0x13

XORI op=5 f=x    ALUop=0000
00101_00 --> 001_0100 --> 0x14
00101_01 --> 001_0101 --> 0x15
00101_10 --> 001_0110 --> 0x16
00101_11 --> 001_0111 --> 0x17

ADDI op=6 f=x    ALUop=0100
00110_00 --> 001_1000 --> 0x18
00110_01 --> 001_1001 --> 0x19
00110_10 --> 001_1010 --> 0x1a
00110_11 --> 001_1011 --> 0x1b

NADDI op=7 f=x    ALUop=0110
00111_00 --> 001_1100 --> 0x1c
00111_01 --> 001_1101 --> 0x1d
00111_10 --> 001_1110 --> 0x1e
00111_11 --> 001_1111 --> 0x1f

SEQI op=8 f=x     ALUop=0101
01000_00 --> 010_0000 --> 0x20
01000_01 --> 010_0001 --> 0x21
01000_10 --> 010_0010 --> 0x22
01000_11 --> 010_0011 --> 0x23

SLTI op=9 f=x     ALUop=0111
01001_00 --> 010_0100 --> 0x24
01001_01 --> 010_0101 --> 0x25
01001_10 --> 010_0110 --> 0x26
01001_11 --> 010_0111 --> 0x27

SLL op=10 f=x    ALUop=1010
01010_00 --> 010_1000 --> 0x28
01010_01 --> 010_1001 --> 0x29
01010_10 --> 010_1010 --> 0x2a
01010_11 --> 010_1011 --> 0x2b

SRL op=11 f=x     ALUop=1001
01011_00 --> 010_1100 --> 0x2c
01011_01 --> 010_1101 --> 0x2d
01011_10 --> 010_1110 --> 0x2e
01011_11 --> 010_1111 --> 0x2f

SRA op=12 f=x      ALUop=1000
01100_00 --> 011_0000 --> 0x30
01100_01 --> 011_0001 --> 0x31
01100_10 --> 011_0010 --> 0x32
01100_11 --> 011_0011 --> 0x33


ROR op =13 f=x     ALUOp =1011
01101_00 --> 011_0100 --> 0x34
01101_01 --> 011_0101 --> 0x35
01101_10 --> 011_0110 --> 0x36
01101_11 --> 011_0111 --> 0x37

